https://dontpad.com/dfs6201104

DONTPAD: 
DFS6201104

REPO DE AULAS:
https://github.com/thiagooshiro/python-classes
(para clonar local:) https://github.com/thiagooshiro/python-classes.git


Tokken de hoje 8702

Resolu√ß√£o JanKenPo

pontos_jogador = 0
pontos_maquina = 0
empates = 0
partidas = 0

def menu():
    global pontos_jogador
    global partidas
    global pontos_maquina
    global empates
    print('Seja bem vindo ao jogo de Pedra, Papel, Tesoura: ')
    print('Lembre-se: Pedra vence tesoura, tesoura vence papel, papel vence pedra')

    escolha_maquina = choice(opcoes)

    while True:
        escolha_jogador = input('Por favor fa√ßa sua escolha_jogador ou digite "sair" para sair do jogo: ').lower()

        if escolha_jogador == 'sair':
            print('Obrigado por jogar')
            return
        elif escolha_jogador not in opcoes:
            escolha_jogador = input('Escolha inv√°lida, digite novamente: ')
            continue
        else:
            break

    
    print('Voc√™ escolheu', escolha_jogador)
    print('A m√°quina escolheu', escolha_maquina)

    # L√≥gica do jogo

    # Caso de Empate:
    if escolha_jogador == escolha_maquina:
        print('Voc√™s empataram!')
        empates += 1
    
    # Condi√ß√µes de Vit√≥ria:

    elif escolha_jogador == 'pedra' and escolha_maquina == 'tesoura' or escolha_jogador == 'tesoura' and escolha_maquina == 'papel' or escolha_maquina == 'papel' and escolha_maquina == 'pedra':
        print('Parab√©ns! Voc√™ venceu!')
        pontos_jogador += 1
    else:
        print('Voc√™ perdeu!')
        pontos_maquina += 1

    partidas += 1
    escolha_jogador = input('Deseja continuar jogando?s/n: ')
    if escolha_jogador != 'n':
        return menu()
    
    
    print('Voc√™ fez:', pontos_jogador)
    print('A M√°quina fez:', pontos_maquina)
    print(f'Aconteceram {empates} empates')
    print('Total de partidas:', partidas)



menu()







DESAFIO : 

    "01": "Controle de Gastos Pessoais üí∞ - O usu√°rio insere seus gastos di√°rios, e o programa calcula o total e avisa quando ultrapassa um or√ßamento definido.",


   "02" Calculadora que divide uma conta entre amigos, considerando o valor total, o n√∫mero de pessoas e o percentual de gorjeta.



Exerc√≠cio Calculadora Modular:
O objetivo do exerc√≠cio √© criar o funcionamento de uma calculadora simples capaz de realizar soma, subtra√ß√£o, multiplica√ß√£o e divis√£o.


# Regras:
# As fun√ß√µes das opera√ß√µes devem estar em um arquivo separado chamado operacoes.py
# O arquivo principal com c√≥digo da fun√ß√£o menu deve ser chamado calculadora.py
# Para utilizar as fun√ß√µes de opara√ß√£o utilize importa√ß√£o do arquivo operacoes.py.


def menu():
    print('Bem vindo a calculadora')
    print('Qual opera√ß√£o deseja executar?')
    print('1 - Soma', '2 - Subtra√ß√£o', '3 - Multilpica√ß√£o', '4 - Divis√£o', '5 - Sair', sep='\n')
    oper = input('Escolha a opera√ß√£o: ')

    if oper == '1':
        # operChamar fun√ß√£o pra somar
        pass #pass √© s√≥ pra n√£o quebrar o c√≥digo, remova-o quando implementar sua l√≥gica.
    elif oper == '2':
        # Chamar a fun√ß√£o de subtrair
        pass

    elif oper == '3':
        # Chamar fun√ß√£o de multiplicar;
        pass

    elif oper == '4':
        # Chamar opera√ß√£o de divis√£o;
        pass
    elif oper == '5':
        # Encerrar o programa com mensagem amig√°vel
        pass
    else:
        # Escolha fora das escolhas dispon√≠veis
        # Exibir mensagem de erro!
        pass
